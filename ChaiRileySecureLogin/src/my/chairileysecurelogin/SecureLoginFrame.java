/*
 * Author: Riley Chai
 * Class: ICS4U
 * Program: Secure Login
 */
package my.chairileysecurelogin;

import java.io.FileNotFoundException;
import java.security.NoSuchAlgorithmException;
import java.util.NoSuchElementException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 335480661
 */
public class SecureLoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form SecureLoginFrame
     */
    public SecureLoginFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        secureLoginPanel1 = new my.chairileysecurelogin.SecureLoginPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Register = new javax.swing.JButton();
        Quit = new javax.swing.JButton();
        loginUsername = new javax.swing.JTextField();
        newUserUsername = new javax.swing.JTextField();
        newUserEmail = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        loginPassword = new javax.swing.JPasswordField();
        newUserPassword = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        resetUsername = new javax.swing.JTextField();
        resetEmail = new javax.swing.JTextField();
        resetPassword = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Reset = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        secureLoginPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Secure Login", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("User Login");

        jLabel2.setText("Username: ");

        jLabel3.setText("Password: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Register New User");

        jLabel6.setText("New Username: ");

        jLabel7.setText("New Email: ");

        jLabel8.setText("New Password: ");

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });

        Quit.setText("Quit");
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });

        loginUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginUsernameActionPerformed(evt);
            }
        });

        newUserUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserUsernameActionPerformed(evt);
            }
        });

        newUserEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserEmailActionPerformed(evt);
            }
        });

        loginPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginPasswordActionPerformed(evt);
            }
        });

        newUserPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserPasswordActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Reset Password");

        resetUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetUsernameActionPerformed(evt);
            }
        });

        resetEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetEmailActionPerformed(evt);
            }
        });

        resetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPasswordActionPerformed(evt);
            }
        });

        jLabel11.setText("Username: ");

        jLabel12.setText("Email: ");

        jLabel13.setText("New Password: ");

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout secureLoginPanel1Layout = new javax.swing.GroupLayout(secureLoginPanel1);
        secureLoginPanel1.setLayout(secureLoginPanel1Layout);
        secureLoginPanel1Layout.setHorizontalGroup(
            secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(newUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(newUserUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(newUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)))
                            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Register)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secureLoginPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1))
                                    .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                        .addComponent(loginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(loginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel10)
                        .addGap(652, 652, 652))
                    .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secureLoginPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(resetPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secureLoginPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secureLoginPanel1Layout.createSequentialGroup()
                                                    .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel12)
                                                        .addComponent(jLabel11))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(resetUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(resetEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(Quit, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                                .addGap(136, 136, 136)
                                                .addComponent(Reset)))))
                                .addGap(592, 592, 592))
                            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        secureLoginPanel1Layout.setVerticalGroup(
            secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(loginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(loginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(newUserUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(newUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(newUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Register)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secureLoginPanel1Layout.createSequentialGroup()
                .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel10)
                        .addGap(41, 41, 41)
                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(resetUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(resetEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(secureLoginPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(resetPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Quit))
                    .addGroup(secureLoginPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator4)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(secureLoginPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(secureLoginPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Retrieves the user entry when the login button is pressed.
        String username = loginUsername.getText();//Gets the text from the username text field.
        String password = loginPassword.getText();//Gets the text from the password text field.
        try {
            //Checks if the username and password match any existing user's on the file.
            if (SecureLoginPanel.checkLogin(username, password)) {//If they match,
                jLabel4.setText("Login Successful!");//Informs the user that they are logged in.
                //Clears the two text fields.
                loginUsername.setText("");
                loginPassword.setText("");
            } else {//If they do not match,
                jLabel4.setText("**Username or password does not match**");//Informs the user to try again.
                //Clears the two text fields.
                loginUsername.setText("");
                loginPassword.setText("");
                loginUsername.requestFocus();//Moves the cursor back to the username text field for convenience.
            }
        } catch (FileNotFoundException | NoSuchAlgorithmException ex) {
            Logger.getLogger(SecureLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        //Retrieves the new user information when the register button is pressed.
        String newUsername = newUserUsername.getText();//Gets the text from the new username text field.
        String newEmail = newUserEmail.getText();//Gets the text from the new email text field.
        String newPassword = newUserPassword.getText();//Gets the text from the new password text field.
        //Resets all labels.
        jLabel9.setText("");
        jLabel15.setText("");
        jLabel16.setText("");
        jLabel17.setText("");
        if (SecureLoginPanel.verifyUsername(newUsername)) {//Ensures the username is valid.
            if (SecureLoginPanel.verifyEmail(newEmail)) {//Ensures the email is valid.
                try {
                    if (SecureLoginPanel.verifyPassword(newPassword)) {//Ensures the password is valid.
                        SecureLoginPanel.newUser(newUsername, newEmail, newPassword);//If everything is valid, add the new user info to the file.
                        //Clears the text fields.
                        newUserUsername.setText("");
                        newUserEmail.setText("");
                        newUserPassword.setText("");
                        jLabel9.setText("New user successfully created");//Informs the user that they have successfully registered.
                    } else {
                        jLabel17.setText("**Password is too weak**");//Informs the user that the password is not strong enough.
                        newUserPassword.setText("");//Clears the password text field.
                        newUserPassword.requestFocus();//Sets the cursor to the password text field.
                    }
                } catch (FileNotFoundException | NoSuchElementException | NoSuchAlgorithmException ex) {
                    Logger.getLogger(SecureLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                jLabel16.setText("**Please enter a valid email**");//Informs the user that the email is invalid.
                newUserEmail.setText("");//Clears the email text field.
                newUserPassword.setText("");//Clears the password text field.
                newUserEmail.requestFocus();//Sets the cursor to the email text field.
            }
        } else {
            jLabel15.setText("**Please enter a username**");//Informs the user to enter a non-empty username.
            newUserUsername.requestFocus();//Sets the cursor to the username text field.
        }
    }//GEN-LAST:event_RegisterActionPerformed

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
        //When the user presses the quit button.
        System.exit(0);//Exits the program
    }//GEN-LAST:event_QuitActionPerformed

    private void loginUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginUsernameActionPerformed
        //When the enter key is pressed in the "username" box
        loginPassword.requestFocus();//Changes the focused text box to the password text field to reduce the amount of user input required. 
    }//GEN-LAST:event_loginUsernameActionPerformed

    private void newUserUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserUsernameActionPerformed
        //When the enter key is pressed in the "new username" box
        newUserEmail.requestFocus();//Sets the cursor to the "new email" text field.
    }//GEN-LAST:event_newUserUsernameActionPerformed

    private void newUserEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserEmailActionPerformed
        //When the enter key is pressed in the "new email" box
        newUserPassword.requestFocus();//Sets the cursor to the "new password" text field.
    }//GEN-LAST:event_newUserEmailActionPerformed

    private void loginPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginPasswordActionPerformed
        //Retrieves the user entry when the enter key is pressed in the "password" text field.
        String username = loginUsername.getText();//Gets the text from the username text field.
        String password = loginPassword.getText();//Gets the text from the password text field.
        try {
            //Checks if the username and password match any existing user's on the file.
            if (SecureLoginPanel.checkLogin(username, password)) {//If they match,
                jLabel4.setText("Login Successful!");//Informs the user that they are logged in.
                //Clears the two text fields.
                loginUsername.setText("");
                loginPassword.setText("");
            } else {//If they do not match,
                jLabel4.setText("**Username or password does not match**");//Informs the user to try again.
                //Clears the two text fields.
                loginUsername.setText("");
                loginPassword.setText("");
                loginUsername.requestFocus();//Moves the cursor back to the username text field for convenience.
            }
        } catch (FileNotFoundException | NoSuchAlgorithmException ex) {
            Logger.getLogger(SecureLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginPasswordActionPerformed

    private void newUserPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserPasswordActionPerformed
        //Retrieves the new user information when the enter key is pressed in the "new password" text field.
        String newUsername = newUserUsername.getText();//Gets the text from the new username text field.
        String newEmail = newUserEmail.getText();//Gets the text from the new email text field.
        String newPassword = newUserPassword.getText();//Gets the text from the new password text field.
        //Resets all labels.
        jLabel9.setText("");
        jLabel15.setText("");
        jLabel16.setText("");
        jLabel17.setText("");
        if (SecureLoginPanel.verifyUsername(newUsername)) {//Ensures the username is valid.
            if (SecureLoginPanel.verifyEmail(newEmail)) {//Ensures the email is valid.
                try {
                    if (SecureLoginPanel.verifyPassword(newPassword)) {//Ensures the password is valid.
                        SecureLoginPanel.newUser(newUsername, newEmail, newPassword);//If everything is valid, add the new user info to the file.
                        //Clears the text fields.
                        newUserUsername.setText("");
                        newUserEmail.setText("");
                        newUserPassword.setText("");
                        jLabel9.setText("New user successfully created");//Informs the user that they have successfully registered.
                    } else {
                        jLabel17.setText("**Password is too weak**");//Informs the user that the password is not strong enough.
                        newUserPassword.setText("");//Clears the password text field.
                        newUserPassword.requestFocus();//Sets the cursor to the password text field.
                    }
                } catch (FileNotFoundException | NoSuchElementException | NoSuchAlgorithmException ex) {
                    Logger.getLogger(SecureLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                jLabel16.setText("**Please enter a valid email**");//Informs the user that the email is invalid.
                newUserEmail.setText("");//Clears the email text field.
                newUserPassword.setText("");//Clears the password text field.
                newUserEmail.requestFocus();//Sets the cursor to the email text field.
            }
        } else {
            jLabel15.setText("**Please enter a username**");//Informs the user to enter a non-empty username.
            newUserUsername.requestFocus();//Sets the cursor to the username text field.
        }
    }//GEN-LAST:event_newUserPasswordActionPerformed

    private void resetUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetUsernameActionPerformed
        //When the enter key is pressed in the "reset username" text field.
        resetEmail.requestFocus();//Sets the cursor to the "reset email" text field.
    }//GEN-LAST:event_resetUsernameActionPerformed

    private void resetEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetEmailActionPerformed
        //When the enter key is pressed in the "reset email" text field.
        resetPassword.requestFocus();//Sets the cursor to the "reset password" text field.
    }//GEN-LAST:event_resetEmailActionPerformed

    private void resetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPasswordActionPerformed
        //Retrieves the user information when the enter key is pressed in the "reset password" text field.
        try {
            //Ensures all fields have been filled properly before attempting to reset the password.
            if (SecureLoginPanel.verifyUsername(resetUsername.getText())) {
                if (SecureLoginPanel.verifyEmail(resetEmail.getText())) {
                    if (SecureLoginPanel.verifyPassword(resetPassword.getText())) {
                        //Checks if the username and email match an existing user on file. If yes, updates the password.
                        if (SecureLoginPanel.resetPassword(resetUsername.getText(), resetEmail.getText(), resetPassword.getText())) {
                            jLabel14.setText("Password has been successfully reset!");//Informs the user that their password has been successfully reset.
                            //Clears the text fields.
                            resetUsername.setText("");
                            resetEmail.setText("");
                            resetPassword.setText("");
                        } else {
                            jLabel14.setText("**Username or email do not match any user**");//Informs the user that the information is incorrect.
                            //Clears the text fields.
                            resetUsername.setText("");
                            resetEmail.setText("");
                            resetPassword.setText("");
                            resetUsername.requestFocus();//Sets the cursor back to the username text field.
                        }
                    } else {
                        jLabel14.setText("**Password is too weak**");//Informs the user that their new password is too weak.
                        resetPassword.setText("");//Clears the text field.
                        resetPassword.requestFocus();//Sets the cursor back to the password text field.

                    }
                } else {
                    jLabel14.setText("**Invalid email**");//Informs the user that their email is invalid.
                    //Clears the text fields.
                    resetEmail.setText("");
                    resetPassword.setText("");
                    resetEmail.requestFocus();//Sets the cursor back to the email text field.
                }
            } else {
                jLabel14.setText("**Please enter your username**");//Informs the user to enter a non-empty username.
                resetUsername.requestFocus();//Sets the cursor back to the username text field.
            }
        } catch (FileNotFoundException | NoSuchAlgorithmException ex) {
            Logger.getLogger(SecureLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_resetPasswordActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        //Retrieves the user information when the reset button is pressed.
        try {
            //Ensures all fields have been filled properly before attempting to reset the password.
            if (SecureLoginPanel.verifyUsername(resetUsername.getText())) {
                if (SecureLoginPanel.verifyEmail(resetEmail.getText())) {
                    if (SecureLoginPanel.verifyPassword(resetPassword.getText())) {
                        //Checks if the username and email match an existing user on file. If yes, updates the password.
                        if (SecureLoginPanel.resetPassword(resetUsername.getText(), resetEmail.getText(), resetPassword.getText())) {
                            jLabel14.setText("Password has been successfully reset!");//Informs the user that their password has been successfully reset.
                            //Clears the text fields.
                            resetUsername.setText("");
                            resetEmail.setText("");
                            resetPassword.setText("");
                        } else {
                            jLabel14.setText("**Username or email do not match any user**");//Informs the user that the information is incorrect.
                            //Clears the text fields.
                            resetUsername.setText("");
                            resetEmail.setText("");
                            resetPassword.setText("");
                            resetUsername.requestFocus();//Sets the cursor back to the username text field.
                        }
                    } else {
                        jLabel14.setText("**Password is too weak**");//Informs the user that their new password is too weak.
                        resetPassword.setText("");//Clears the text field.
                        resetPassword.requestFocus();//Sets the cursor back to the password text field.

                    }
                } else {
                    jLabel14.setText("**Invalid email**");//Informs the user that their email is invalid.
                    //Clears the text fields.
                    resetEmail.setText("");
                    resetPassword.setText("");
                    resetEmail.requestFocus();//Sets the cursor back to the email text field.
                }
            } else {
                jLabel14.setText("**Please enter your username**");//Informs the user to enter a non-empty username.
                resetUsername.requestFocus();//Sets the cursor back to the username text field.
            }
        } catch (FileNotFoundException | NoSuchAlgorithmException ex) {
            Logger.getLogger(SecureLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecureLoginFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecureLoginFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecureLoginFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecureLoginFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecureLoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Quit;
    private javax.swing.JButton Register;
    private javax.swing.JButton Reset;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPasswordField loginPassword;
    private javax.swing.JTextField loginUsername;
    private javax.swing.JTextField newUserEmail;
    private javax.swing.JPasswordField newUserPassword;
    private javax.swing.JTextField newUserUsername;
    private javax.swing.JTextField resetEmail;
    private javax.swing.JPasswordField resetPassword;
    private javax.swing.JTextField resetUsername;
    private my.chairileysecurelogin.SecureLoginPanel secureLoginPanel1;
    // End of variables declaration//GEN-END:variables
}
